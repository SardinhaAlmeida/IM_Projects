<?xml version="1.0" encoding="UTF-8"?>
<scxml xmlns="http://www.w3.org/2005/07/scxml" xmlns:commons="http://commons.apache.org/scxml" xmlns:emma="http://www.w3.org/2003/04/emma" xmlns:mmi="http://www.w3.org/2008/04/mmi-arch" xmlns:schemaLocation="http://www.w3.org/2005/07/scxml scxml.xsd http://commons.apache.org/scxml commons.xsd http://www.w3.org/2008/04/mmi-arch mmi.xsd http://www.w3.org/2003/04/emma emma.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" initialstate="init">
  <datamodel>
    <data name="data1" />
    <data name="data2" />
  </datamodel>
  <state id="init">
    <onentry>
      <log label="[init]" expr="READY" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="main">
    <onentry>
      <log label="[main]" expr="READY" />
    </onentry>
    <transition target="sspeech[speech][go_to_slide_title][title]" event="[SPEECH][GO_TO_SLIDE_TITLE][TITLE]" />
    <transition target="sspeech[speech][start_timer]" event="[SPEECH][START_TIMER]" />
    <transition target="sspeech[speech][restart_presentation]" event="[SPEECH][RESTART_PRESENTATION]" />
    <transition target="sspeech[speech][zoom_out]" event="[SPEECH][ZOOM_OUT]" />
    <transition target="sspeech[speech][previous_slide]" event="[SPEECH][PREVIOUS_SLIDE]" />
    <transition target="sgestures[gestures][stop]" event="[GESTURES][STOP]" />
    <transition target="sgestures[gestures][nextslide]" event="[GESTURES][NEXTSLIDE]" />
    <transition target="sspeech[speech][stop_timer]" event="[SPEECH][STOP_TIMER]" />
    <transition target="sspeech[speech][highlight_phrase][phrase]" event="[SPEECH][HIGHLIGHT_PHRASE][PHRASE]" />
    <transition target="sspeech[speech][next_slide]" event="[SPEECH][NEXT_SLIDE]" />
    <transition target="sspeech[speech][zoom_in]" event="[SPEECH][ZOOM_IN]" />
    <transition target="sgestures[gestures][previousslide]" event="[GESTURES][PREVIOUSSLIDE]" />
    <transition target="sgestures[gestures][silence]" event="[GESTURES][SILENCE]" />
    <transition target="sspeech[speech][helper]" event="[SPEECH][HELPER]" />
    <transition target="sspeech[speech][current_slide]" event="[SPEECH][CURRENT_SLIDE]" />
    <transition target="sgestures[gestures][questions]" event="[GESTURES][QUESTIONS]" />
    <transition target="sspeech[speech][elapsed_time]" event="[SPEECH][ELAPSED_TIME]" />
    <transition target="sspeech[speech][slides_left]" event="[SPEECH][SLIDES_LEFT]" />
    <transition target="sgestures[gestures][timer]" event="[GESTURES][TIMER]" />
    <transition target="sspeech[speech][go_to_slide_number][slide_number]" event="[SPEECH][GO_TO_SLIDE_NUMBER][SLIDE_NUMBER]" />
    <transition target="sgestures[gestures][start]" event="[GESTURES][START]" />
    <transition target="sgestures[gestures][helper]" event="[GESTURES][HELPER]" />
  </state>
  <state id="sspeech[speech][go_to_slide_title][title]">
    <onentry>
      <log label="[sspeech[speech][go_to_slide_title][title]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][go_to_slide_title][title]" event="timeout-sspeech[speech][go_to_slide_title][title]" delay="0" target="" targettype="" namelist="" />
    </onentry>
    <transition target="speech[speech][go_to_slide_title][title]-final" event="timeout-sspeech[speech][go_to_slide_title][title]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][go_to_slide_title][title]" />
    </onexit>
  </state>
  <state id="speech[speech][go_to_slide_title][title]-final">
    <onentry>
      <log label="[speech[speech][go_to_slide_title][title]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[SPEECH][GO_TO_SLIDE_TITLE][TITLE]')}" />
      <send event="GO_TO_SLIDE_TITLE" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][start_timer]">
    <onentry>
      <log label="[sspeech[speech][start_timer]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][start_timer]" event="timeout-sspeech[speech][start_timer]" delay="0" target="" targettype="" namelist="" />
    </onentry>
    <transition target="speech[speech][start_timer]-final" event="timeout-sspeech[speech][start_timer]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][start_timer]" />
    </onexit>
  </state>
  <state id="speech[speech][start_timer]-final">
    <onentry>
      <log label="[speech[speech][start_timer]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[SPEECH][START_TIMER]')}" />
      <send event="START_TIMER" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][restart_presentation]">
    <onentry>
      <log label="[sspeech[speech][restart_presentation]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][restart_presentation]" event="timeout-sspeech[speech][restart_presentation]" delay="0" target="" targettype="" namelist="" />
    </onentry>
    <transition target="speech[speech][restart_presentation]-final" event="timeout-sspeech[speech][restart_presentation]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][restart_presentation]" />
    </onexit>
  </state>
  <state id="speech[speech][restart_presentation]-final">
    <onentry>
      <log label="[speech[speech][restart_presentation]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[SPEECH][RESTART_PRESENTATION]')}" />
      <send event="RESTART_PRESENTATION" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][zoom_out]">
    <onentry>
      <log label="[sspeech[speech][zoom_out]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][zoom_out]" event="timeout-sspeech[speech][zoom_out]" delay="0" target="" targettype="" namelist="" />
    </onentry>
    <transition target="speech[speech][zoom_out]-final" event="timeout-sspeech[speech][zoom_out]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][zoom_out]" />
    </onexit>
  </state>
  <state id="speech[speech][zoom_out]-final">
    <onentry>
      <log label="[speech[speech][zoom_out]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[SPEECH][ZOOM_OUT]')}" />
      <send event="ZOOM_OUT" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][previous_slide]">
    <onentry>
      <log label="[sspeech[speech][previous_slide]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][previous_slide]" event="timeout-sspeech[speech][previous_slide]" delay="5000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="speech[speech][previous_slide]-final" event="timeout-sspeech[speech][previous_slide]" />
    <transition target="sspeech[speech][previous_slide]-gestures[gestures][previousslide]" event="[GESTURES][PREVIOUSSLIDE]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][previous_slide]" />
    </onexit>
  </state>
  <state id="speech[speech][previous_slide]-final">
    <onentry>
      <log label="[speech[speech][previous_slide]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[FUSION][PREVIOUS_SLIDE]')}" />
      <send event="PREVIOUS_SLIDE" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][previous_slide]-gestures[gestures][previousslide]">
    <onentry>
      <log label="[sspeech[speech][previous_slide]-gestures[gestures][previousslide]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][PREVIOUS_SLIDE]')}" />
      <send event="PREVIOUS_SLIDE" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][stop]">
    <onentry>
      <log label="[sgestures[gestures][stop]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sgestures[gestures][stop]" event="timeout-sgestures[gestures][stop]" delay="0" target="" targettype="" namelist="" />
    </onentry>
    <transition target="gestures[gestures][stop]-final" event="timeout-sgestures[gestures][stop]" />
    <onexit>
      <cancel sendid="state1-timer-sgestures[gestures][stop]" />
    </onexit>
  </state>
  <state id="gestures[gestures][stop]-final">
    <onentry>
      <log label="[gestures[gestures][stop]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[GESTURES][END_PRESENTATION]')}" />
      <send event="END_PRESENTATION" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][nextslide]">
    <onentry>
      <log label="[sgestures[gestures][nextslide]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sgestures[gestures][nextslide]" event="timeout-sgestures[gestures][nextslide]" delay="5000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="gestures[gestures][nextslide]-final" event="timeout-sgestures[gestures][nextslide]" />
    <transition target="sgestures[gestures][nextslide]-speech[speech][next_slide]" event="[SPEECH][NEXT_SLIDE]" />
    <onexit>
      <cancel sendid="state1-timer-sgestures[gestures][nextslide]" />
    </onexit>
  </state>
  <state id="gestures[gestures][nextslide]-final">
    <onentry>
      <log label="[gestures[gestures][nextslide]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[FUSION][NEXT_SLIDE]')}" />
      <send event="NEXT_SLIDE" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][nextslide]-speech[speech][next_slide]">
    <onentry>
      <log label="[sgestures[gestures][nextslide]-speech[speech][next_slide]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][NEXT_SLIDE]')}" />
      <send event="NEXT_SLIDE" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][stop_timer]">
    <onentry>
      <log label="[sspeech[speech][stop_timer]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][stop_timer]" event="timeout-sspeech[speech][stop_timer]" delay="0" target="" targettype="" namelist="" />
    </onentry>
    <transition target="speech[speech][stop_timer]-final" event="timeout-sspeech[speech][stop_timer]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][stop_timer]" />
    </onexit>
  </state>
  <state id="speech[speech][stop_timer]-final">
    <onentry>
      <log label="[speech[speech][stop_timer]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[SPEECH][STOP_TIMER]')}" />
      <send event="STOP_TIMER" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][highlight_phrase][phrase]">
    <onentry>
      <log label="[sspeech[speech][highlight_phrase][phrase]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][highlight_phrase][phrase]" event="timeout-sspeech[speech][highlight_phrase][phrase]" delay="0" target="" targettype="" namelist="" />
    </onentry>
    <transition target="speech[speech][highlight_phrase][phrase]-final" event="timeout-sspeech[speech][highlight_phrase][phrase]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][highlight_phrase][phrase]" />
    </onexit>
  </state>
  <state id="speech[speech][highlight_phrase][phrase]-final">
    <onentry>
      <log label="[speech[speech][highlight_phrase][phrase]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[SPEECH][HIGHLIGHT_PHRASE][PHRASE]')}" />
      <send event="HIGHLIGHT_PHRASE" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][next_slide]">
    <onentry>
      <log label="[sspeech[speech][next_slide]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][next_slide]" event="timeout-sspeech[speech][next_slide]" delay="5000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="speech[speech][next_slide]-final" event="timeout-sspeech[speech][next_slide]" />
    <transition target="sspeech[speech][next_slide]-gestures[gestures][nextslide]" event="[GESTURES][NEXTSLIDE]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][next_slide]" />
    </onexit>
  </state>
  <state id="speech[speech][next_slide]-final">
    <onentry>
      <log label="[speech[speech][next_slide]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[FUSION][NEXT_SLIDE]')}" />
      <send event="NEXT_SLIDE" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][next_slide]-gestures[gestures][nextslide]">
    <onentry>
      <log label="[sspeech[speech][next_slide]-gestures[gestures][nextslide]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][NEXT_SLIDE]')}" />
      <send event="NEXT_SLIDE" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][zoom_in]">
    <onentry>
      <log label="[sspeech[speech][zoom_in]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][zoom_in]" event="timeout-sspeech[speech][zoom_in]" delay="0" target="" targettype="" namelist="" />
    </onentry>
    <transition target="speech[speech][zoom_in]-final" event="timeout-sspeech[speech][zoom_in]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][zoom_in]" />
    </onexit>
  </state>
  <state id="speech[speech][zoom_in]-final">
    <onentry>
      <log label="[speech[speech][zoom_in]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[SPEECH][ZOOM_IN]')}" />
      <send event="ZOOM_IN" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][previousslide]">
    <onentry>
      <log label="[sgestures[gestures][previousslide]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sgestures[gestures][previousslide]" event="timeout-sgestures[gestures][previousslide]" delay="5000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="gestures[gestures][previousslide]-final" event="timeout-sgestures[gestures][previousslide]" />
    <transition target="sgestures[gestures][previousslide]-speech[speech][previous_slide]" event="[SPEECH][PREVIOUS_SLIDE]" />
    <onexit>
      <cancel sendid="state1-timer-sgestures[gestures][previousslide]" />
    </onexit>
  </state>
  <state id="gestures[gestures][previousslide]-final">
    <onentry>
      <log label="[gestures[gestures][previousslide]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[FUSION][PREVIOUS_SLIDE]')}" />
      <send event="PREVIOUS_SLIDE" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][previousslide]-speech[speech][previous_slide]">
    <onentry>
      <log label="[sgestures[gestures][previousslide]-speech[speech][previous_slide]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][PREVIOUS_SLIDE]')}" />
      <send event="PREVIOUS_SLIDE" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][silence]">
    <onentry>
      <log label="[sgestures[gestures][silence]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sgestures[gestures][silence]" event="timeout-sgestures[gestures][silence]" delay="0" target="" targettype="" namelist="" />
    </onentry>
    <transition target="gestures[gestures][silence]-final" event="timeout-sgestures[gestures][silence]" />
    <onexit>
      <cancel sendid="state1-timer-sgestures[gestures][silence]" />
    </onexit>
  </state>
  <state id="gestures[gestures][silence]-final">
    <onentry>
      <log label="[gestures[gestures][silence]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[GESTURES][REQUEST_SILENCE]')}" />
      <send event="REQUEST_SILENCE" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][helper]">
    <onentry>
      <log label="[sspeech[speech][helper]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][helper]" event="timeout-sspeech[speech][helper]" delay="5000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="main" event="timeout-sspeech[speech][helper]" />
    <transition target="sspeech[speech][helper]-gestures[gestures][helper]" event="[GESTURES][HELPER]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][helper]" />
    </onexit>
  </state>
  <state id="sspeech[speech][helper]-gestures[gestures][helper]">
    <onentry>
      <log label="[sspeech[speech][helper]-gestures[gestures][helper]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][HELPER]')}" />
      <send event="HELPER" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][current_slide]">
    <onentry>
      <log label="[sspeech[speech][current_slide]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][current_slide]" event="timeout-sspeech[speech][current_slide]" delay="0" target="" targettype="" namelist="" />
    </onentry>
    <transition target="speech[speech][current_slide]-final" event="timeout-sspeech[speech][current_slide]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][current_slide]" />
    </onexit>
  </state>
  <state id="speech[speech][current_slide]-final">
    <onentry>
      <log label="[speech[speech][current_slide]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[SPEECH][CURRENT_SLIDE]')}" />
      <send event="CURRENT_SLIDE" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][questions]">
    <onentry>
      <log label="[sgestures[gestures][questions]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sgestures[gestures][questions]" event="timeout-sgestures[gestures][questions]" delay="0" target="" targettype="" namelist="" />
    </onentry>
    <transition target="gestures[gestures][questions]-final" event="timeout-sgestures[gestures][questions]" />
    <onexit>
      <cancel sendid="state1-timer-sgestures[gestures][questions]" />
    </onexit>
  </state>
  <state id="gestures[gestures][questions]-final">
    <onentry>
      <log label="[gestures[gestures][questions]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[GESTURES][QUESTIONS]')}" />
      <send event="QUESTIONS" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][elapsed_time]">
    <onentry>
      <log label="[sspeech[speech][elapsed_time]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][elapsed_time]" event="timeout-sspeech[speech][elapsed_time]" delay="5000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="main" event="timeout-sspeech[speech][elapsed_time]" />
    <transition target="sspeech[speech][elapsed_time]-gestures[gestures][timer]" event="[GESTURES][TIMER]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][elapsed_time]" />
    </onexit>
  </state>
  <state id="sspeech[speech][elapsed_time]-gestures[gestures][timer]">
    <onentry>
      <log label="[sspeech[speech][elapsed_time]-gestures[gestures][timer]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][ELAPSED_TIME]')}" />
      <send event="ELAPSED_TIME" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][slides_left]">
    <onentry>
      <log label="[sspeech[speech][slides_left]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][slides_left]" event="timeout-sspeech[speech][slides_left]" delay="0" target="" targettype="" namelist="" />
    </onentry>
    <transition target="speech[speech][slides_left]-final" event="timeout-sspeech[speech][slides_left]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][slides_left]" />
    </onexit>
  </state>
  <state id="speech[speech][slides_left]-final">
    <onentry>
      <log label="[speech[speech][slides_left]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[SPEECH][SLIDES_LEFT]')}" />
      <send event="SLIDES_LEFT" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][timer]">
    <onentry>
      <log label="[sgestures[gestures][timer]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sgestures[gestures][timer]" event="timeout-sgestures[gestures][timer]" delay="5000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="main" event="timeout-sgestures[gestures][timer]" />
    <transition target="sgestures[gestures][timer]-speech[speech][elapsed_time]" event="[SPEECH][ELAPSED_TIME]" />
    <onexit>
      <cancel sendid="state1-timer-sgestures[gestures][timer]" />
    </onexit>
  </state>
  <state id="sgestures[gestures][timer]-speech[speech][elapsed_time]">
    <onentry>
      <log label="[sgestures[gestures][timer]-speech[speech][elapsed_time]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][ELAPSED_TIME]')}" />
      <send event="ELAPSED_TIME" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sspeech[speech][go_to_slide_number][slide_number]">
    <onentry>
      <log label="[sspeech[speech][go_to_slide_number][slide_number]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sspeech[speech][go_to_slide_number][slide_number]" event="timeout-sspeech[speech][go_to_slide_number][slide_number]" delay="0" target="" targettype="" namelist="" />
    </onentry>
    <transition target="speech[speech][go_to_slide_number][slide_number]-final" event="timeout-sspeech[speech][go_to_slide_number][slide_number]" />
    <onexit>
      <cancel sendid="state1-timer-sspeech[speech][go_to_slide_number][slide_number]" />
    </onexit>
  </state>
  <state id="speech[speech][go_to_slide_number][slide_number]-final">
    <onentry>
      <log label="[speech[speech][go_to_slide_number][slide_number]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[SPEECH][GO_TO_SLIDE_NUMBER][SLIDE_NUMBER]')}" />
      <send event="GO_TO_SLIDE_NUMBER" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][start]">
    <onentry>
      <log label="[sgestures[gestures][start]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sgestures[gestures][start]" event="timeout-sgestures[gestures][start]" delay="0" target="" targettype="" namelist="" />
    </onentry>
    <transition target="gestures[gestures][start]-final" event="timeout-sgestures[gestures][start]" />
    <onexit>
      <cancel sendid="state1-timer-sgestures[gestures][start]" />
    </onexit>
  </state>
  <state id="gestures[gestures][start]-final">
    <onentry>
      <log label="[gestures[gestures][start]-final]" expr="READY" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF2(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1, '[GESTURES][START_PRESENTATION]')}" />
      <send event="START_PRESENTATION" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
  <state id="sgestures[gestures][helper]">
    <onentry>
      <log label="[sgestures[gestures][helper]]" expr="READY" />
      <assign name="data1" expr="${_eventdata.data}" />
      <send id="state1-timer-sgestures[gestures][helper]" event="timeout-sgestures[gestures][helper]" delay="5000" target="" targettype="" namelist="" />
    </onentry>
    <transition target="main" event="timeout-sgestures[gestures][helper]" />
    <transition target="sgestures[gestures][helper]-speech[speech][helper]" event="[SPEECH][HELPER]" />
    <onexit>
      <cancel sendid="state1-timer-sgestures[gestures][helper]" />
    </onexit>
  </state>
  <state id="sgestures[gestures][helper]-speech[speech][helper]">
    <onentry>
      <log label="[sgestures[gestures][helper]-speech[speech][helper]]" expr="READY" />
      <assign name="data2" expr="${_eventdata.data}" />
      <commons:var name="newExtensionNotification" expr="${mmi:newExtensionNotificationF(contextId, 'FUSION', 'IM', mmi:newRequestId(contextId), null, data1,data2, '[FUSION][HELPER]')}" />
      <send event="HELPER" target="IM" targettype="MC" namelist="newExtensionNotification" />
    </onentry>
    <transition target="main" />
  </state>
</scxml>
